window.PQ_WORDS={jsonCache:{},txtCache:{},list:[],allCategories:["anatomy","animals","animals_birds","animals_farm","animals_insects","animals_pets","business","cities","clothes","colors","continents","countries","creative_gaming","creative_visual","creative_writing","digital","events","food","food_beverages","food_fruit","food_sweets","general","holidays","items","items_appliances","items_furniture","items_household","items_substances","items_tools","items_toys","locations","military","music","music_theory","nature","nature_weather","occupations","people","places","places_architecture","places_inside","planets","religion","science","science_chemistry","science_physics","shapes","sports","time","travel","vehicles"],defaultCategories:["animals","food","places","items"],allLevels:["core","easy","medium","hard","hardcore"],defaultLevel:["easy"],allTypes:["nouns","geography","names","adjectives","verbs","adverbs"],defaultType:["nouns"],defSubcat:"general",getTxtFilePath:function(t,e){let s=e.cat;return e.subcat.length>0&&e.subcat!=this.defSubcat&&(s+="_"+e.subcat),t+"/"+e.type+"/"+e.level+"/"+s+".txt"},getJsonFilePath:function(t,e){return t+"/lib-pqWords.json"},async getWordCount(t=!0){return t&&await this.loadWithParams({useAll:!0,method:"json"}),this.recursiveWordCount(this.jsonCache)},recursiveWordCount(t){if(Array.isArray(t))return t.length;if("object"==typeof t){let e=0;for(const s in t)e+=this.recursiveWordCount(t[s]);return e}return 0},addToTxtCache:function(t,e){this.txtCache[t]=e},hasFileCached:function(t){return t in this.txtCache},constructListFromKeys:function(t){this.list=[];for(const e of t){const t=this.txtCache[e];if(!t)continue;const s=t.splitWordsIntoSeparateEntries();for(const t of s)this.list.push(t)}this.list.length<=0&&console.error("PQ_WORDS: Word list is empty")},constructListFromQueries:function(t){this.list=[];for(const e of t){const t=e.type,s=e.level,i=e.cat,n=e.subcat;if(!this.safeCheckHierarchy(this.jsonCache,[t,s,i,n]))continue;const o=this.jsonCache[t][s][i][n],a=new PQ_WORDS.WordMetadata;a.setFromObject(e);for(const t of o){const e=new PQ_WORDS.WordData;e.setWord(t),e.setMetadata(a),this.list.push(e)}}this.list.length<=0&&console.error("PQ_WORDS: Word list is empty")},safeCheckHierarchy(t,e,s=!1){Map;for(let i=0;i<e.length;i++){const n=e[i],o=t instanceof Map;if(o?null!=t.get(n):n in t){t=o?t.get(n):t[n];continue}if(!s)return!1;o?t.set(n,new Map):t[n]={};i>=e.length-1&&(o?t.set(n,[]):t[n]=[]),t=o?t.get(n):t[n]}return!0},setInHierarchy(t,e,s){for(let i=0;i<e.length;i++){const n=e[i];i==e.length-1?t.set(n,s):t=t.get(n)}},getInHierarchy(t,e){for(let s=0;s<e.length;s++){const i=e[s];if(null==t.get(i))return null;t=t.get(i)}return t},convertListToIndex(){const t=new Map;for(const e of this.list){const s=e.getWord().toLowerCase().split("");s.push(""),this.safeCheckHierarchy(t,s,!0),this.setInHierarchy(t,s,e)}return t},convertListToHierarchy(){const t={};for(const e of this.list){const s=e.metadata.type,i=e.metadata.level,n=e.metadata.cat,o=e.metadata.subcat;this.safeCheckHierarchy(t,[s,i,n,o],!0);const a=e.word;t[s][i][n][o].push(a)}return t},getAll:function(){return this.list},ltDistanceReverse(t="",e=0,s=!0){return""==t||e<0?[]:this.ltDistanceRecursiveReverse(t,t,e,s)},ltDistanceRecursiveReverse(t,e,s,i){if(s<=0)return[e];const n=[];for(let o=0;o<e.length+1;o++){const a=e.slice(0,o)+e.slice(o+1);s>1&&i&&n.push(a),n.push(this.ltDistanceRecursiveReverse(t,a,s-1,i))}for(let o=0;o<26;o++){const a=Math.floor(o+10).toString(36);for(let o=0;o<e.length+1;o++){let r=e.slice(0,o)+a+e.slice(o);r!=t&&(s>1&&i&&n.push(r),n.push(this.ltDistanceRecursiveReverse(t,r,s-1,i))),o>=e.length||a!=e[o]&&(r=e.slice(0,o)+a+e.slice(o+1),r!=t&&(s>1&&i&&n.push(r),n.push(this.ltDistanceRecursiveReverse(t,r,s-1,i))))}}return n.flat()},ltDistance(t,e,s){return Math.abs(t.length-e.length)>s?1/0:this.ltDistanceRecursive(t,e,t.length+1,e.length+1)},ltDistanceRecursive(t,e,s,i){if(0==Math.min(s,i))return Math.max(s,i);const n=this.ltDistanceRecursive(t,e,s-1,i)+1,o=this.ltDistanceRecursive(t,e,s,i-1)+1;let a=this.ltDistanceRecursive(t,e,s-1,i-1);return t[s]!=e[i]&&(a+=1),Math.min(n,o,a)},findWord(t,e=0,s=4){this.listIndex||(this.listIndex=this.convertListToIndex());const i=t.split("");i.push("");const n=this.getInHierarchy(this.listIndex,i);if(null!=n)return{success:!0,matches:[n]};if(0==e)return{success:!1,matches:[]};const o=[],a=this.ltDistanceReverse(t,e);for(const t of a){const e=t.split("");e.push("");const i=this.getInHierarchy(this.listIndex,e);if(null!=i&&(!o.includes(i)&&(o.push(i),o.length>=s)))break}return{success:!1,matches:o}},getRandomMultiple(t=10,e=!1){const s=[];for(let i=0;i<t;i++){const t=this.getRandom(e);if(null==t)break;s.push(t)}return s},getRandom:function(t=!1){if(this.list.length<=0)return null;const e=Math.floor(Math.random()*this.list.length),s=this.list[e];return t&&this.list.splice(e,1),s},getAllSubcategories(t){const e=[];for(const s of this.allCategories)s.includes(t)&&t!=s&&e.push(s);return e},loadAll:async function(){await this.loadWithParams({useAll:!0,method:"txt"})},loadWithParams:async function(t={}){const e=t.path||"/words";"/"==e.charAt(e.length-1)&&e.slice(0,-1),t.useAll&&(t.types=this.allTypes,t.levels=this.allLevels,t.categories=this.allCategories);const s=t.types||this.defaultType,i=t.levels||this.defaultLevel;if(t.useAllLevelsBelow){const e=this.allLevels.indexOf(t.levels[0]);for(let t=0;t<e;t++)i.push(this.allLevels[t])}let n=t.useAllCategories?this.allCategories:this.defaultCategories;if(t.categories&&t.categories.length>0&&!t.useAllCategories&&(n=t.categories),t.useAllSubcat)for(const t of n)for(const e of this.getAllSubcategories(t))n.push(e);const o=t.typeExceptions||[],a=t.categoryExceptions||[],r=[];for(const t of s){if(!(t in o))for(const e of i)for(const s of n){let i=s,n=this.defSubcat;s.includes("_")&&(i=s.split("_")[0],n=s.split("_")[1]);i in a||n in a||r.push({type:t,level:e,cat:i,subcat:n})}}const l=t.method||"json";"json"==l?await this.loadJsonWithQueries(e,r):"txt"==l&&await this.loadTxtWithQueries(e,r)},async loadJsonWithQueries(t,e){this.jsonFileLoaded()||await this.loadJsonFile(this.getJsonFilePath(t)),this.constructListFromQueries(e)},async loadTxtWithQueries(t,e){const s=[];let i=Promise.resolve();for(const n of e){const e=this.getTxtFilePath(t,n),o=new PQ_WORDS.WordMetadata;o.setFromObject(n);const a=new PQ_WORDS.WordDataList;a.setMetadata(o),s.push(e),this.hasFileCached(e)||(i=i.then((()=>this.loadTxtFile(e,a))))}await i,this.constructListFromKeys(s)},fileExists:function(t){var e=new XMLHttpRequest;return e.open("HEAD",t,!1),e.send(),404!==e.status},parseTxtFile(t){const e=t.replaceAll("\r","").split("\n");for(let t=e.length-1;t>=0;t--)e[t].length>=2||e.splice(t,1);return e},loadTxtFile:function(t,e){if(console.log("Checking file at ",t),!this.fileExists(t))return Promise.resolve();const s=this;return new Promise(((i,n)=>{const o=new XMLHttpRequest;o.open("GET",t),o.onerror=t=>{i(!1)},o.onloadend=()=>{if(404!=o.status){if(200==o.status){const n=PQ_WORDS.parseTxtFile(o.response);e.setWords(n),s.addToTxtCache(t,e),i(!0)}}else i(!1)},o.send()}))},async loadJsonFile(t){const e=this;return new Promise(((s,i)=>{const n=new XMLHttpRequest;n.open("GET",t),n.onerror=t=>{s(!1)},n.onloadend=()=>{404!=n.status?200==n.status&&(e.jsonCache=JSON.parse(n.response),s(!0)):s(!1)},n.send()}))},jsonFileLoaded(){return Object.keys(this.jsonCache).length>0},async getAllAsJSON(){await this.loadAll(),console.log(this.convertListToHierarchy())},printAllCategories(t=!0,e=","){const s=[];for(const e of this.allCategories){const i=e.includes("_");t&&i||s.push(e)}return s.join(e)},WordMetadata:class{set(t,e,s,i){this.type=t,this.level=e,this.cat=s,this.subcat=i}setFromObject(t){this.set(t.type,t.level,t.cat,t.subcat)}getCategory(){return this.cat}getSubCategory(){return this.subcat}getFullCategory(t=!0){let e=this.cat;return"general"!=this.subcat&&(e+=t?" ("+this.subcat+")":"_"+this.subcat),e}prettyPrint(){return[this.type,this.level,this.cat,this.subcat].join(", ")}},WordDataList:class{constructor(){this.words=[],this.metadata=null}setMetadata(t){this.metadata=t}setWords(t){this.words=t}splitWordsIntoSeparateEntries(){const t=[];for(const e of this.words){const s=new PQ_WORDS.WordData;s.setWord(e);new PQ_WORDS.WordMetadata;s.setMetadata(this.metadata),t.push(s)}return t}},WordData:class{constructor(){this.word="",this.metadata=null}is(t){return this.word==t}setWord(t){this.word=t}getWord(){return this.word}setMetadata(t){this.metadata=t}getMetadata(){return this.metadata}}};